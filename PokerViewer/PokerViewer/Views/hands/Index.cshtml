@model PagedList.IPagedList<PokerViewer.Models.hand>
@using PagedList.Mvc;

<link href="~/Content/PagedList.css" rel="stylesheet"
	  type="text/css" />

<link href="~/Content/PagedList.css" rel="stylesheet"
	  type="text/css" />

@{
	ViewBag.Title = "Index";
	SelectList itemsPerPageList = DefaultValues.ItemsPerPageList;


}
@using (Html.BeginForm("Index", "hands", FormMethod.Get))
{
	<p>
		Find by Hand ID: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
		<input type="submit" value="Search" />
	</p>
}
<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
			@Html.ActionLink("HandID", "Index", new { sortOrder = ViewBag.IdSortParm, currentFilter = ViewBag.CurrentFilter })
      
        </th>
        <th>
			@Html.ActionLink("TableID", "Index", new { sortOrder = ViewBag.TableIDSortParm, currentFilter = ViewBag.CurrentFilter })
          
        </th>
        <th>
			@Html.ActionLink("NumPlayers", "Index", new { sortOrder = ViewBag.NumPlayersSortParm, currentFilter = ViewBag.CurrentFilter })
        
        </th>
        <th>
			@Html.ActionLink("StartTime", "Index", new { sortOrder = ViewBag.StartTimeSortParm, currentFilter = ViewBag.CurrentFilter })
                  </th>
        <th>
			@Html.ActionLink("ButtonPosition", "Index", new { sortOrder = ViewBag.ButtonPositionSortParm, currentFilter = ViewBag.CurrentFilter })
          
        </th>
        <th>
			@Html.ActionLink("PotSize", "Index", new { sortOrder = ViewBag.PotSizeSortParm, currentFilter = ViewBag.CurrentFilter })
    
        </th>
        <th>
			@Html.ActionLink("FlopCard1", "Index", new { sortOrder = ViewBag.FlopCard1, currentFilter = ViewBag.CurrentFilter })
   
        </th>
        <th>
			@Html.ActionLink("FlopCard2", "Index", new { sortOrder = ViewBag.FlopCard2, currentFilter = ViewBag.CurrentFilter })
      
        </th>
        <th>
			@Html.ActionLink("FlopCard3", "Index", new { sortOrder = ViewBag.FlopCard3, currentFilter = ViewBag.CurrentFilter })
     
        </th>
        <th>
			@Html.ActionLink("TurnCard", "Index", new { sortOrder = ViewBag.TurnCard, currentFilter = ViewBag.CurrentFilter })
      
        </th>
        <th>
			@Html.ActionLink("RiverCard", "Index", new { sortOrder = ViewBag.RiverCard, currentFilter = ViewBag.CurrentFilter })
       
        </th>
        <th>
			@Html.ActionLink("Table Stakes", "Index", new { sortOrder = ViewBag.tableStakes, currentFilter = ViewBag.CurrentFilter })
        
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.HandID)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TableID)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.NumPlayers)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.StartTime)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ButtonPosition)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PotSize)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.FlopCard1)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.FlopCard2)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.FlopCard3)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TurnCard)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.RiverCard)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.table.Stakes)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.HandID }) |
            @Html.ActionLink("Details", "Details", new { id=item.HandID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.HandID })
        </td>
    </tr>
}

</table>
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index", new { page, itemsPerPage = ViewBag.CurrentItemsPerPage, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
