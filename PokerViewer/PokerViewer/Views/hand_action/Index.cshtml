@model PagedList.IPagedList<PokerViewer.Models.hand_action>
@using PagedList.Mvc;

<link href="~/Content/PagedList.css" rel="stylesheet"
	  type="text/css" />

<link href="~/Content/PagedList.css" rel="stylesheet"
	  type="text/css" />

@{
	ViewBag.Title = "hand_action";
	SelectList itemsPerPageList = DefaultValues.ItemsPerPageList;
}

<h2>Hand Action Index</h2>

@using (Html.BeginForm("Index", "hand_action", FormMethod.Get))
{
	<p>
		Find by Player ID: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
		<input type="submit" value="Search" />
	</p>
}
<table class="table">
    <tr>
        <th>
			@Html.ActionLink("HandID", "Index", new { sortOrder = ViewBag.IdSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
			@Html.ActionLink("ActionID", "Index", new { sortOrder = ViewBag.ActionIdSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
			@Html.ActionLink("PlayerID", "Index", new { sortOrder = ViewBag.PlayerIdSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
			@Html.ActionLink("ActionName", "Index", new { sortOrder = ViewBag.ActionNameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
			@Html.ActionLink("Street", "Index", new { sortOrder = ViewBag.StreetSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
			@Html.ActionLink("Amount", "Index", new { sortOrder = ViewBag.AmountSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.ActionLink(item.HandID.ToString(), "Details", "hands", new { id = item.HandID }, null)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ActionID)
        </td>
        <td>
            @Html.ActionLink(item.PlayerID.ToString(), "Details", "player_stats", new { id = item.PlayerID }, null)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ActionName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Street)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Amount)
        </td>
    </tr>
}

</table>
<br />


Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index", new { page, itemsPerPage = ViewBag.CurrentItemsPerPage, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
