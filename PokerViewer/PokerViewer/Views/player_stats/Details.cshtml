@model PokerViewer.Models.player_stats

@{
    ViewBag.Title = "Details";
}

<h2>Details for: @Html.DisplayFor(model => model.Name)</h2>

<div>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.HandsPlayed)
        </dt>

        <dd>
            @Html.ActionLink(Model.HandsPlayed.ToString(), "Details", "player_matchups", new { id = Model.PlayerID }, null)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Winnings)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Winnings)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.VPIP)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.VPIP)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PFR)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PFR)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ThreeBet)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ThreeBet)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.FourBet)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.FourBet)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PFAF)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PFAF)
        </dd>

    </dl>
</div>

<div>
    <canvas id="winningsChart" width="400" height="400"></canvas>
</div>

<div>
    <canvas id="radarChart" width="100" height="100"></canvas>
</div>

<div>
    <canvas id="simpleTest" width="400" height="400"></canvas>
</div>

<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.PlayerID }) |
    @Html.ActionLink("Delete", "Delete", new { id = Model.PlayerID }) |
    @Html.ActionLink("Back to player index", "Index")
</p>

@section Scripts {
    <script>
        var radarData = {
            labels: ["VPIP", "PFR", "ThreeBet", "FourBet"],
            datasets: [
                {
                    label: "Player",
                    backgroundColor: "rgba(255,99,132,0.2)",
                    borderColor: "rgba(255,99,132,1)",
                    pointBackgroundColor: "rgba(255,99,132,1)",
                    pointBorderColor: "#fff",
                    pointHoverBackgroundColor: "#fff",
                    pointHoverBorderColor: "rgba(255,99,132,1)",
                    data: []
                },
                {
                    label: "Average",
                    backgroundColor: "rgba(179,181,198,0.2)",
                    borderColor: "rgba(179,181,198,1)",
                    pointBackgroundColor: "rgba(179,181,198,1)",
                    pointBorderColor: "#fff",
                    pointHoverBackgroundColor: "#fff",
                    pointHoverBorderColor: "rgba(179,181,198,1)",
                    data: []
                }
            ]
        };
        $.getJSON("/player_stats/GetData/"+@Model.PlayerID, function (data) {
            for (var i = 0; i <= data.length - 1; i++) {
                radarData.datasets[i].data.push(data[i].VPIP);
                radarData.datasets[i].data.push(data[i].PFR);
                radarData.datasets[i].data.push(data[i].Threeet);
                radarData.datasets[i].data.push(data[i].FourBet);
            }
            var ctx = document.getElementById("radarChart").getContext("2d");
            var myRadarChart = new Chart(ctx,
                {
                    type: "radar",
                    data: radarData,
                    options: {}
                });
        });
    </script>
    <script>
        var winningsData = {
            datasets: [
                {
                    label: "Winnings",
                    fill: false,
                    lineTension: 0.1,
                    backgroundColor: "rgba(75,192,192,0.4)",
                    borderColor: "rgba(75,192,192,1)",
                    borderCapStyle: 'butt',
                    borderJoinStyle: 'miter',
                    pointBorderColor: "rgba(75,192,192,1)",
                    pointBackgroundColor: "#fff",
                    pointBorderWidth: 1,
                    pointHoverRadius: 5,
                    pointHoverBackgroundColor: "rgba(75,192,192,1)",
                    pointHoverBorderColor: "rgba(220,220,220,1)",
                    pointHoverBorderWidth: 2,
                    pointRadius: 2,
                    pointHitRadius: 10,
                    data: [],
                    spanGaps: false,
                    //steppedLine: true,
                }
            ]
        };
        $.getJSON("/player_stats/GetWinningsData/"+@Model.PlayerID, function (data) {
            var total = 0;
            for (var i = 0; i <= data.length - 1; i++) {
                total = total + data[i];
                winningsData.datasets[0].data.push({x: i+1, y: total});
            }
            var ctx = document.getElementById("winningsChart").getContext("2d");
            var myWinningsChart = new Chart(ctx, {
                type: 'line',
                data: winningsData,
                options: {
                    scales: {
                        xAxes: [{
                            type: 'linear',
                            position: 'bottom'
                        }]
                    }
                }
            });
        });
    </script>
}
