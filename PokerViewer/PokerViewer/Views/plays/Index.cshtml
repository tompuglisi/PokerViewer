@model PagedList.IPagedList<PokerViewer.Models.play>
@using PagedList.Mvc;

<link href="~/Content/PagedList.css" rel="stylesheet"
	  type="text/css" />

<link href="~/Content/PagedList.css" rel="stylesheet"
	  type="text/css" />

@{
	ViewBag.Title = "Index";
	SelectList itemsPerPageList = DefaultValues.ItemsPerPageList;


}

<h2>Plays Index</h2>

@using (Html.BeginForm("Index", "plays", FormMethod.Get))
{
	<p>
		Find by Player Name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
		<input type="submit" value="Search" />
	</p>
}
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("HandID", "Index", new { sortOrder = ViewBag.HandID, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Player Name", "Index", new { sortOrder = ViewBag.playerName, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
			@Html.ActionLink("Starting Stack", "Index", new { sortOrder = ViewBag.StartingStack, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
			@Html.ActionLink("Ending Stack", "Index", new { sortOrder = ViewBag.EndingStackSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
			@Html.ActionLink("Seat Position", "Index", new { sortOrder = ViewBag.SeatPositionSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
			@Html.ActionLink("HoleCard1", "Index", new { sortOrder = ViewBag.HoleCard1SortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
			@Html.ActionLink("HoleCard2", "Index", new { sortOrder = ViewBag.HoleCard2SortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
			@Html.ActionLink("TableID", "Index", new { sortOrder = ViewBag.handTableID, currentFilter = ViewBag.CurrentFilter })
        </th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.ActionLink(item.HandID.ToString(), "Details", "hands", new { id = item.HandID }, null)
        </td>
        <td>
            @Html.ActionLink(item.player.Name, "Details", "player_stats", new { id = item.PlayerID }, null)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.StartingStack)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EndingStack)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SeatPosition)
        </td>
        <td>
            @if (item.HoleCard1 != null)
            {
                <img src="@Url.Content("~/Images/Cards/" + item.HoleCard1 + ".png")" alt=@item.HoleCard1 style="max-height: 100px; max-width: 100px;" />
            }
        </td>
        <td>
            @if (item.HoleCard2 != null)
            {
                <img src="@Url.Content("~/Images/Cards/" + item.HoleCard2 + ".png")" alt=@item.HoleCard2 style="max-height: 100px; max-width: 100px;" />
            }
        </td>
        <td>
            @Html.ActionLink(item.hand.TableID.ToString(), "Details", "tables", new { id = item.hand.TableID }, null)
            
        </td>
    </tr>
}

</table>
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index", new { page, itemsPerPage = ViewBag.CurrentItemsPerPage, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))


